// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var LetOps = require("../test/library/LetOps.js");
var Globals = require("../test/library/Globals.js");
var Helpers = require("../test/library/Helpers.js");
var TestnetDeployHelpers = require("./helpers/TestnetDeployHelpers.js");
var ProtocolInteractionHelpers = require("./helpers/ProtocolInteractionHelpers.js");

function runTestTransactions(param, _deploymentArgs) {
  var treasury = param.treasury;
  var paymentToken = param.paymentToken;
  var longShort = param.longShort;
  var staker = param.staker;
  return LetOps.Await.let_(ethers.getSigners(), (function (loadedAccounts) {
                var admin = loadedAccounts[1];
                var user1 = loadedAccounts[2];
                var user2 = loadedAccounts[3];
                var user3 = loadedAccounts[4];
                var user7 = loadedAccounts[8];
                var user8 = loadedAccounts[9];
                return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.topupBalanceIfLow(admin, user1), (function (param) {
                              return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.topupBalanceIfLow(admin, user2), (function (param) {
                                            return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.topupBalanceIfLow(admin, user3), (function (param) {
                                                          console.log("deploying markets");
                                                          return LetOps.AwaitThen.let_(TestnetDeployHelpers.deployTestMarket("Eth Market", "FL_ETH", longShort, treasury, admin, paymentToken), (function (param) {
                                                                        return LetOps.AwaitThen.let_(TestnetDeployHelpers.deployTestMarket("The Flippening", "FL_FLIP", longShort, treasury, admin, paymentToken), (function (param) {
                                                                                      return LetOps.AwaitThen.let_(TestnetDeployHelpers.deployTestMarket("Doge Market", "FL_DOGE", longShort, treasury, admin, paymentToken), (function (param) {
                                                                                                    var initialMarkets = [
                                                                                                      1,
                                                                                                      2,
                                                                                                      3
                                                                                                    ];
                                                                                                    var longMintAmount = Globals.bnFromString("10000000000000000000");
                                                                                                    var shortMintAmount = Globals.div(longMintAmount, Globals.bnFromInt(2));
                                                                                                    var redeemShortAmount = Globals.div(shortMintAmount, Globals.bnFromInt(2));
                                                                                                    var longStakeAmount = Globals.bnFromString("100000000000000000");
                                                                                                    var shortStakeAmount = Globals.bnFromString("500000000000000000");
                                                                                                    var priceAndStateUpdate = function (param) {
                                                                                                      return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                        return ProtocolInteractionHelpers.setOracleManagerPrice(longShort, __x, admin);
                                                                                                                      })), (function (param) {
                                                                                                                    return LetOps.AwaitThen.let_(Helpers.increaseTime(5), (function (param) {
                                                                                                                                  console.log("Executing update system state");
                                                                                                                                  return ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                return ProtocolInteractionHelpers.updateSystemState(longShort, admin, __x);
                                                                                                                                              }));
                                                                                                                                }));
                                                                                                                  }));
                                                                                                    };
                                                                                                    console.log("Executing Long Mints");
                                                                                                    return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                      return ProtocolInteractionHelpers.mintLongNextPriceWithSystemUpdate(longMintAmount, __x, paymentToken, longShort, user1, admin);
                                                                                                                    })), (function (param) {
                                                                                                                  console.log("Executing Short Mints");
                                                                                                                  return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                    return ProtocolInteractionHelpers.mintShortNextPriceWithSystemUpdate(shortMintAmount, __x, paymentToken, longShort, user1, admin);
                                                                                                                                  })), (function (param) {
                                                                                                                                console.log("Executing Short Position Redeem");
                                                                                                                                return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                  return ProtocolInteractionHelpers.redeemShortNextPriceWithSystemUpdate(redeemShortAmount, __x, longShort, user1, admin);
                                                                                                                                                })), (function (param) {
                                                                                                                                              return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
                                                                                                                                                            return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                              return ProtocolInteractionHelpers.mintLongNextPriceWithSystemUpdate(longMintAmount, __x, paymentToken, longShort, user1, admin);
                                                                                                                                                                            })), (function (param) {
                                                                                                                                                                          return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                            return ProtocolInteractionHelpers.shiftFromShortNextPriceWithSystemUpdate(redeemShortAmount, __x, longShort, user1, admin);
                                                                                                                                                                                          })), (function (param) {
                                                                                                                                                                                        console.log("Staking long position");
                                                                                                                                                                                        return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                          return ProtocolInteractionHelpers.stakeSynthLong(longStakeAmount, longShort, __x, user1);
                                                                                                                                                                                                        })), (function (param) {
                                                                                                                                                                                                      console.log("multiple synth shift from long, same price update");
                                                                                                                                                                                                      return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.shiftNextPrice(Globals.twoBn, 1, longShort, user1, true), (function (param) {
                                                                                                                                                                                                                    return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.shiftNextPrice(Globals.twoBn, 1, longShort, user1, true), (function (param) {
                                                                                                                                                                                                                                  return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
                                                                                                                                                                                                                                                var longShiftAmount = Globals.div(longStakeAmount, Globals.twoBn);
                                                                                                                                                                                                                                                console.log("Shift stake with system updated all markets");
                                                                                                                                                                                                                                                return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                  return ProtocolInteractionHelpers.shiftStakeNextPriceWithSystemUpdate(longShiftAmount, true, __x, longShort, staker, user1, admin);
                                                                                                                                                                                                                                                                })), (function (param) {
                                                                                                                                                                                                                                                              return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.topupBalanceIfLow(admin, user7), (function (param) {
                                                                                                                                                                                                                                                                            return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
                                                                                                                                                                                                                                                                                          console.log("Multiple users minting long and short - all markets");
                                                                                                                                                                                                                                                                                          return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                            return ProtocolInteractionHelpers.mintLongNextPriceWithSystemUpdate(Globals.bnFromInt(1), __x, paymentToken, longShort, user1, admin);
                                                                                                                                                                                                                                                                                                          })), (function (param) {
                                                                                                                                                                                                                                                                                                        return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                                          return ProtocolInteractionHelpers.mintShortNextPriceWithSystemUpdate(Globals.bnFromInt(1), __x, paymentToken, longShort, user1, admin);
                                                                                                                                                                                                                                                                                                                        })), (function (param) {
                                                                                                                                                                                                                                                                                                                      return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                                                        return ProtocolInteractionHelpers.mintLongNextPriceWithSystemUpdate(Globals.bnFromInt(1), __x, paymentToken, longShort, user2, admin);
                                                                                                                                                                                                                                                                                                                                      })), (function (param) {
                                                                                                                                                                                                                                                                                                                                    return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                                                                      return ProtocolInteractionHelpers.mintLongNextPriceWithSystemUpdate(Globals.bnFromInt(1), __x, paymentToken, longShort, user8, admin);
                                                                                                                                                                                                                                                                                                                                                    })), (function (param) {
                                                                                                                                                                                                                                                                                                                                                  return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                                                                                    return ProtocolInteractionHelpers.mintLongNextPriceWithSystemUpdate(Globals.bnFromInt(1), __x, paymentToken, longShort, user7, admin);
                                                                                                                                                                                                                                                                                                                                                                  })), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                console.log("Stake short and shift to long");
                                                                                                                                                                                                                                                                                                                                                                return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                                                                                                  return ProtocolInteractionHelpers.mintShortNextPriceWithSystemUpdate(shortMintAmount, __x, paymentToken, longShort, user2, admin);
                                                                                                                                                                                                                                                                                                                                                                                })), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                              return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
                                                                                                                                                                                                                                                                                                                                                                                                return ProtocolInteractionHelpers.stakeSynthShort(shortStakeAmount, longShort, __x, user2);
                                                                                                                                                                                                                                                                                                                                                                                              })), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                            return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                          var shortShiftAmount = Globals.div(shortStakeAmount, Globals.twoBn);
                                                                                                                                                                                                                                                                                                                                                                                                          console.log("multiple shifts short same price update");
                                                                                                                                                                                                                                                                                                                                                                                                          console.log("Amount to shift is", Globals.bnToString(Globals.div(shortShiftAmount, Globals.twoBn)));
                                                                                                                                                                                                                                                                                                                                                                                                          return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.shiftNextPrice(Globals.div(shortShiftAmount, Globals.twoBn), 1, longShort, user2, false), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                        console.log("Amount to shift is", Globals.bnToString(Globals.div(shortShiftAmount, Globals.twoBn)));
                                                                                                                                                                                                                                                                                                                                                                                                                        return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.shiftNextPrice(Globals.div(shortShiftAmount, Globals.twoBn), 1, longShort, user2, false), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                                      console.log("Multiple mints same price update");
                                                                                                                                                                                                                                                                                                                                                                                                                                      var mintAmount = Globals.bnFromString("20000000000000000");
                                                                                                                                                                                                                                                                                                                                                                                                                                      return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.mintNextPrice(mintAmount, 1, paymentToken, longShort, user3, true), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.mintNextPrice(mintAmount, 1, paymentToken, longShort, user3, true), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                console.log("Redeem Long market ID 1");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.redeemNextPrice(mintAmount, 1, longShort, user3, true), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            console.log("Multiple mints same price update");
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.mintNextPrice(mintAmount, 1, paymentToken, longShort, user3, true), (function (param) {
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.mintNextPrice(mintAmount, 1, paymentToken, longShort, user3, true), (function (param) {
return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
console.log("Redeem Long market ID 1");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.redeemNextPrice(mintAmount, 1, longShort, user3, true), (function (param) {
return LetOps.AwaitThen.let_(priceAndStateUpdate(undefined), (function (param) {
console.log("Update treasury base price");
return LetOps.AwaitThen.let_(treasury.connect(admin).updateBasePrice(Globals.bnFromString("300000000000000000")), (function (param) {
console.log("User1 minting float:", user1.address);
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.claimFloatForUser(initialMarkets, staker, user1), (function (param) {
console.log("Withdraw long stake");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
return ProtocolInteractionHelpers.withdrawStakeSynthLong(longShort, staker, __x, user1);
})), (function (param) {
console.log("Transfer tokens from user1 to user2");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
return ProtocolInteractionHelpers.transferSynthLong(longShort, user1, user2, __x);
})), (function (param) {
console.log("Executing Long Mint and Stakes");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
return ProtocolInteractionHelpers.mintAndStakeNextPriceWithSystemStateUpdate(longMintAmount, __x, paymentToken, longShort, user1, admin, true);
})), (function (param) {
console.log("Executing Short Mint and Stakes");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
return ProtocolInteractionHelpers.mintAndStakeNextPriceWithSystemStateUpdate(shortMintAmount, __x, paymentToken, longShort, user1, admin, false);
})), (function (param) {
console.log("Update float percentage");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.updateFloatPercentage(staker, admin, Globals.bnFromString("333333333333333333")), (function (param) {
console.log("Change Balance incentive paramaters");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
return ProtocolInteractionHelpers.updateBalanceIncentiveParameters(staker, admin, __x, Globals.bnFromInt(5), Globals.bnFromInt(0), Globals.bnFromInt(50));
})), (function (param) {
console.log("Change stake withdrawal fees");
return LetOps.AwaitThen.let_(ProtocolInteractionHelpers.executeOnMarkets(initialMarkets, (function (__x) {
return ProtocolInteractionHelpers.updateStakeWithdrawalFee(staker, admin, __x, Globals.bnFromString("4000000000000000"));
})), (function (param) {
return Promise.resolve(undefined);
}));
}));
}));
}));
}));
}));
}));
}));
}));
}));
}));
}));
}));
}));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                                                                                                                                  }));
                                                                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                                                      }));
                                                                                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                                                                          }));
                                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                              }));
                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                  }));
                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                      }));
                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                          }));
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                              }));
                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                  }));
                                                                                                                                                                                                    }));
                                                                                                                                                                                      }));
                                                                                                                                                                        }));
                                                                                                                                                          }));
                                                                                                                                            }));
                                                                                                                              }));
                                                                                                                }));
                                                                                                  }));
                                                                                    }));
                                                                      }));
                                                        }));
                                          }));
                            }));
              }));
}

exports.runTestTransactions = runTestTransactions;
/* Globals Not a pure module */
